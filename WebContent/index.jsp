<html>
<link rel="icon" href='./resources/images/favicon.ico'
	type="image/x-icon">
<head>
<title>CS5917</title>
<style type="text/css">
body {
	background-image: url('./resources/images/bg.png');
}

.sidenav {
	height: 100%;
	width: 20%;
	position: fixed;
	z-index: 1;
	top: 0;
	left: 80%;
	/* 	background-color: #111; */
	overflow-x: hidden;
	/* 	transition: 0.5s; */
	padding-top: 60px;
}

.mainBody {
	height: 100%;
	width: 70%;
	position: fixed;
	/* 	z-index: 1; */
	top: 0;
	left: 0;
	/* 	background-color: #111; */
	overflow-x: hidden;
	/* 	transition: 0.5s; */
	padding-top: 60px;
	padding-left: 60px;
	text-align: justify !important;
}

.sidenav a {
	padding: 8px 8px 8px 32px;
	text-decoration: none;
	/* 	font-size: 25px; */
	color: #818181;
	display: block;
}

.sidenav a:hover {
	color: #FB4D4F;
}

dt {
	display: list-item;
}
</style>
</head>
<body>
	<br>
	<div style="text-align: center" class="mainBody">
		<h2>CS5917 Artificial Intelligence</h2>
		<h4>Abstract</h4>
		<p>
			This app is a demonstration that is part of the CS5917: MSc Project
			in Artificial Intelligence on the topic of Argumentation Frameworks
			in the context of Sets of Attacking Arguments(SETAFs). As part of
			this paper, new ranking functions are proposed when computing
			rankings for arguments in the context of SETAFs. The paper introduces
			the concepts of Abstract Argumentation Frameworks(AAF) as proposed by
			Dung in his seminal paper as well as the existing Ranking Semantic,
			nh-categoriser, as proposed by Yun et al in <a
				href="https://hal-lirmm.ccsd.cnrs.fr/lirmm-02374712/document"
				target="_blank">[1]</a>. In addition to this, this app allows the
			user to generate Preferred Extensions for SETAFs using the
			methodology as outlined by Nielsen et al in <a
				href="https://www.researchgate.net/publication/221650990_Computing_Preferred_Extensions_for_Argumentation_Systems_with_Sets_of_Attacking_Arguments"
				target="_blank">[2]</a>. Further, this app attempts to demonstrate
			the translation of existing Ranking Semantics for Binary
			Argumentation Frameworks in the context of SETAFs. Semantics such as
			Burden-Based and Discussion based semantics are translated into
			Average and Minimum Burden Based and Discussion Based functions that
			work with SETAFs.
		</p>

		<p>The app allows the user to choose an input file using a file
			upload input. Ranking and Extension semantics are chosen using a drop
			down selector. Once all inputs have been provided, the user can
			submit the request using the Submit input button. The server then
			returns the response to the user in the following manner.</p>

		<p>Parsed Arguments and Attacks, generated Rankings and Extensions
			are displayed in the form of tables, the visibility of which is
			toggled using input buttons.</p>
		<dl>
			<dt>Rankings</dt>
			<dd>Displays arguments, as well as their strength values, sorted
				using generated strength values.</dd>
			<dt>Arguments</dt>
			<dd>Displays the parsed arguments ranked according to the
				strength values generated</dd>
			<dt>Attacks</dt>
			<dd>Displays the attacks parsed in the form of Attack Label,
				Attacked Argument and Attacking Members</dd>
			<dt>Extensions</dt>
			<dd>Displays the Extensions generated for the input Argument
				Framework</dd>
		</dl>
		<p>
			Visualisation of Argument Frameworks is implemented using the <a
				href="http://arborjs.org/" target="_blank">ArborJS</a> jQuery
			library. Arguments as well as the Attacks supplied by the user are
			represented on a canvas using Nodes and Edges. Nodes comprise of
			arguments represented using circle shapes while attack relations
			represented using square shapes. Attack relations attack arguments by
			means of a strong directed arrow and attack supports using a regular
			line.
		</p>

		<p>In addition to the visualisation of an input Argument
			Framework, the app enables the user to interact with the arguments,
			attacks and extensions generated by allowing the user to click on
			rows in the tables displayed above to highlight the relevant entity
			on the canvas. Clicking on an entity results in the following</p>
		<dl>
			<dt>Arguments</dt>
			<dd>Highlights the selected argument by highlighting the
				specific Node associated with the argument as well as it's incoming
				attacks and attack supports. Incoming attack edges are highlighted
				in red while support to attacks are highlighted in green.</dd>
			<dt>Attacks</dt>
			<dd>Highlights the selected attack relation by highlighting the
				node specific to the attack label as well as the attacked argument
				and attack supporting arguments. Attacked nodes and attack support
				nodes are highlighted in blue and green colours respectively.
				Support and attack edges are highlighted green and red respectively.</dd>
			<dt>Extensions</dt>
			<dd>Highlights the IN and OUT arguments as dictated by the
				chosen extension. IN arguments are highlighted green while OUT
				arguments are highlighted red.</dd>
		</dl>
		<p>Finally, the menu on the right provides links to a Sample
			ASPARTIX input AF file, documentation for said format, the demo page
			and the GitHub repository.</p>
	</div>
	<div id="mySidenav" class="sidenav">
		<a href="samplefile" download>Sample Input File</a><a
			href="https://www.dbai.tuwien.ac.at/research/argumentation/aspartix/"
			target="_blank">ASPARTIX Input Format</a> <a href="welcome.html"
			target="_blank">Demo</a><a href="https://github.com/hasinha/cs5917"
			target="_blank">GitHub</a><a
			href="https://forms.gle/dYWHHoXiVPVq3Hi67" target="_blank">Feedback</a>
	</div>
</body>
</html>